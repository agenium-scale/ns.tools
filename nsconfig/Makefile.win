# MIT License
#
# Copyright (c) 2020 Agenium Scale
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

CXX          = cl
CXX_FLAGS    = /Ox /W3 /EHsc /D_CRT_SECURE_NO_WARNINGS -I..\ns2\include \
               /DNS_NO_DLLSPEC /c
LD_FLAGS     = Shlwapi.lib Dbghelp.lib

all: nsconfig.exe nstest.exe

string.obj: ..\ns2\lib\string.cpp ..\ns2\include\ns2\string.hpp
	$(CXX) $(CXX_FLAGS) ..\ns2\lib\string.cpp /Fo$@

fs.obj: ..\ns2\lib\fs.cpp ..\ns2\include\ns2\fs.hpp
	$(CXX) $(CXX_FLAGS) ..\ns2\lib\fs.cpp /Fo$@

process.obj: ..\ns2\lib\process.cpp ..\ns2\include\ns2\process.hpp
	$(CXX) $(CXX_FLAGS) ..\ns2\lib\process.cpp /Fo$@

backtrace.obj: ..\ns2\lib\backtrace.cpp ..\ns2\include\ns2\backtrace.hpp
	$(CXX) $(CXX_FLAGS) ..\ns2\lib\backtrace.cpp /Fo$@

levenshtein.obj: ..\ns2\lib\levenshtein.cpp ..\ns2\include\ns2\levenshtein.hpp
	$(CXX) $(CXX_FLAGS) ..\ns2\lib\levenshtein.cpp /Fo$@

exception.obj: ..\ns2\lib\exception.cpp ..\ns2\include\ns2\exception.hpp
	$(CXX) $(CXX_FLAGS) ..\ns2\lib\exception.cpp /Fo$@

backend_ninja.obj: backend_ninja.cpp backend_ninja.hpp
	$(CXX) $(CXX_FLAGS) backend_ninja.cpp /Fo$@

backend_make.obj: backend_make.cpp backend_make.hpp
	$(CXX) $(CXX_FLAGS) backend_make.cpp /Fo$@

compiler.obj: compiler.cpp compiler.hpp
	$(CXX) $(CXX_FLAGS) compiler.cpp /Fo$@

lambda.obj: lambda.cpp lambda.hpp
	$(CXX) $(CXX_FLAGS) lambda.cpp /Fo$@

nsconfig.obj: nsconfig.cpp nsconfig.hpp
	$(CXX) $(CXX_FLAGS) nsconfig.cpp /Fo$@

parser.obj: parser.cpp parser.hpp
	$(CXX) $(CXX_FLAGS) parser.cpp /Fo$@

shell.obj: shell.cpp shell.hpp
	$(CXX) $(CXX_FLAGS) shell.cpp /Fo$@

thread.obj: thread.cpp thread.hpp
	$(CXX) $(CXX_FLAGS) thread.cpp /Fo$@

find_exe_lib_header.obj: find_exe_lib_header.cpp find_exe_lib_header.hpp
	$(CXX) $(CXX_FLAGS) find_exe_lib_header.cpp /Fo$@

nstest.obj: nstest.cpp
	$(CXX) $(CXX_FLAGS) nstest.cpp /Fo$@

nsconfig.exe: string.obj fs.obj process.obj backtrace.obj levenshtein.obj \
              backend_ninja.obj backend_make.obj compiler.obj nsconfig.obj \
              parser.obj shell.obj find_exe_lib_header.obj exception.obj \
              lambda.obj
	$(CXX) string.obj fs.obj process.obj backtrace.obj levenshtein.obj \
	       backend_ninja.obj backend_make.obj compiler.obj nsconfig.obj \
	       parser.obj shell.obj find_exe_lib_header.obj exception.obj \
	       lambda.obj $(LD_FLAGS) /Fe$@

nstest.exe: string.obj fs.obj process.obj backtrace.obj nstest.obj \
            exception.obj thread.obj
	$(CXX) string.obj fs.obj process.obj backtrace.obj thread.obj \
	       nstest.obj exception.obj $(LD_FLAGS) /Fe$@

install: all
	if not exist %USERPROFILE%\bin md %USERPROFILE%\bin
	copy /Y nsconfig.exe %USERPROFILE%\bin
	copy /Y nstest.exe %USERPROFILE%\bin
	if not exist %USERPROFILE%\vimfiles\syntax ( \
	  md %USERPROFILE%\vimfiles\syntax \
	)
	copy /Y nsconfig.syntax.vim %USERPROFILE%\vimfiles\syntax\nsconfig.vim
	if not exist %USERPROFILE%\vimfiles\ftdetect ( \
	  md %USERPROFILE%\vimfiles\ftdetect \
	)
	copy /Y nsconfig.ftdetect.vim \
	        %USERPROFILE%\vimfiles\ftdetect\nsconfig.vim

clean:
	del /Q /F nsconfig.exe nstest.exe *.obj *.ilk *.pdb *.lib *.exp
